{"version":3,"file":"Avatar.stories-b0cbebb1.js","sources":["../../src/Avatar/Avatar.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { color, typography } from '../shared/styles';\n\nimport { glow } from '../shared/animation';\n\nimport { Icon } from '../Icon/Icon';\n\nexport const sizes = {\n  large: 40,\n  medium: 28,\n  small: 20,\n  tiny: 16,\n};\n\nconst Image = styled.div`\n  background: ${(props) => (!props.loading ? 'transparent' : color.light)};\n  border-radius: 50%;\n  display: inline-block;\n  vertical-align: top;\n  overflow: hidden;\n  text-transform: uppercase;\n\n  height: ${sizes.medium}px;\n  width: ${sizes.medium}px;\n  line-height: ${sizes.medium}px;\n\n  ${(props) =>\n    props.size === 'tiny' &&\n    css`\n      height: ${sizes.tiny}px;\n      width: ${sizes.tiny}px;\n      line-height: ${sizes.tiny}px;\n    `}\n\n  ${(props) =>\n    props.size === 'small' &&\n    css`\n      height: ${sizes.small}px;\n      width: ${sizes.small}px;\n      line-height: ${sizes.small}px;\n    `}\n\n  ${(props) =>\n    props.size === 'large' &&\n    css`\n      height: ${sizes.large}px;\n      width: ${sizes.large}px;\n      line-height: ${sizes.large}px;\n    `}\n\n  ${(props) =>\n    !props.src &&\n    css`\n      background: ${!props.loading && '#37D5D3'};\n    `}\n\n  img {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n\n  svg {\n    position: relative;\n    bottom: -2px;\n    height: 100%;\n    width: 100%;\n    vertical-align: top;\n  }\n\n  path {\n    fill: ${color.medium};\n    animation: ${glow} 1.5s ease-in-out infinite;\n  }\n`;\n// prettier-ignore\nconst Initial = styled.div`\n  color: ${color.lightest};\n  text-align: center;\n\n  font-size: ${typography.size.s2}px;\n  line-height: ${sizes.medium}px;\n\n  ${props => props.size === \"tiny\" && css`\n    font-size: ${typography.size.s1 - 2}px;\n    line-height: ${sizes.tiny}px;\n  `}\n\n  ${props => props.size === \"small\" && css`\n    font-size: ${typography.size.s1}px;\n    line-height: ${sizes.small}px;\n  `}\n\n  ${props => props.size === \"large\" && css`\n    font-size: ${typography.size.s3}px;\n    line-height: ${sizes.large}px;\n  `}\n`;\n\n/**\n- Use an avatar for attributing actions or content to specific users.\n- The user's name should always be present when using Avatar â€“ either printed beside the avatar or in a tooltip.\n**/\nexport function Avatar({ loading, username, src, size, ...props }) {\n  let avatarFigure = <Icon icon='useralt' />;\n  const a11yProps = {};\n\n  if (loading) {\n    a11yProps['aria-busy'] = true;\n    a11yProps['aria-label'] = 'Loading avatar ...';\n  } else if (src) {\n    avatarFigure = <img src={src} alt={username} />;\n  } else {\n    a11yProps['aria-label'] = username;\n    avatarFigure = (\n      <Initial size={size} aria-hidden='true'>\n        {username.substring(0, 1)}\n      </Initial>\n    );\n  }\n\n  return (\n    <Image size={size} loading={loading} src={src} {...a11yProps} {...props}>\n      {avatarFigure}\n    </Image>\n  );\n}\n\nAvatar.propTypes = {\n  /**\n    Use the loading state to indicate that the data Avatar needs is still loading.\n    */\n  loading: PropTypes.bool,\n  /**\n    Avatar falls back to the user's initial when no image is provided.\n    Supply a `username` and omit `src` to see what this looks like.\n    */\n  username: PropTypes.string,\n  /**\n    The URL of the Avatar's image.\n    */\n  src: PropTypes.string,\n  /**\n    Avatar comes in four sizes. In most cases, you'll be fine with `medium`.\n    */\n  size: PropTypes.oneOf(Object.keys(sizes)),\n};\n\nAvatar.defaultProps = {\n  loading: false,\n  username: 'loading',\n  src: null,\n  size: 'medium',\n};\n"],"names":["sizes","large","medium","small","tiny","Image","_styled","target","props","loading","color","light","size","css","src","process","glow","Initial","lightest","typography","s2","s1","s3","Avatar","username","avatarFigure","jsx","Icon","a11yProps","substring","propTypes","PropTypes","bool","string","oneOf","Object","keys","defaultProps"],"mappings":"8bASA,MAAAA,EAAA,CACAC,MAAA,GACAC,OAAA,GACAC,MAAA,GACAC,KAAA,EACA,EAEAC,EAAAC,EAAA,MAAA,CAAAC,OAAA,UAAA,CAAA,EAAA,cACAC,GAAAA,EAAAC,QAAAC,EAAAC,MAAA,cAAA,8GAOAX,EAAAE,mBACAF,EAAAE,OAAA,kBACAF,EAAAE,aAEAM,GACAA,EAAAI,OAAA,QACAC,EAAA,UACAb,EAAAI,iBACAJ,EAAAI,KAAA,kBACAJ,EAAAI,WACA,EAAA,EAAA,IAEAI,GACAA,EAAAI,OAAA,SAEAZ,EAAAA,UAAAA,EAAAG,MAAA,YACAH,EAAAG,MACAH,kBAAAA,EAAAG,MAAA,MACA,EAAA,EAAA,IAGAK,GAAAA,EAAAI,OAAA,SAEAZ,EAAAA,UAAAA,EAAAC,kBACAD,EAAAC,MACAD,kBAAAA,EAAAC,MAAA,MACA,EAAA,EAAA,IAGAO,GAAA,CAAAA,EAAAM,KACAD,EAAA,cACA,CAAAL,EAAAC,SAAA,UAAAM,IAAA,EAAA,uIAkBAL,EAAAR,OAAA,cACAc,EAAAD,8BAEA,EAEAE,EAAAX,EAAA,MAAA,CAAAC,OAAA,UAAA,CACAG,EAAAA,SAAAA,EAAAQ,SAGAC,gCAAAA,EAAAP,KAAAQ,GACApB,kBAAAA,EAAAE,OAEAM,MAAAA,GAAAA,EAAAI,OAAA,UACAO,aAAAA,EAAAP,KAAAS,GAAA,EAAA,kBACArB,EAAAI,KAAA,MAAA,EAAA,EAGAI,IAAAA,GAAAA,EAAAI,OAAA,SAAAC,EACAM,aAAAA,EAAAP,KAAAS,GAAA,kBACArB,EAAAG,MAAA,MAAA,EAAA,EAGAK,IAAAA,GAAAA,EAAAI,OAAA,wBACAO,EAAAP,KAAAU,GAAA,kBACAtB,EAAAC,MAAA,MAAA,EAAA,EACAc,GACA,EAMA,SAAAQ,EAAA,CAAAd,QAAAA,EAAAe,SAAAA,EAAAV,IAAAA,EAAAF,KAAAA,EAAA,GAAAJ,CAAA,EAAA,CACA,IAAAiB,EAAAC,EAAAC,EAAA,CAAA,KAAA,SAAA,CAAA,EACA,MAAAC,EAAA,CAAA,EAEA,OAAAnB,GACAmB,EAAA,WAAA,EAAA,GACAA,EAAA,YAAA,EAAA,sBACAd,EACAW,EAAAC,EAAA,MAAA,CAAA,IAAAZ,EAAA,IAAAU,CAAA,CAAA,GAEAI,EAAA,YAAA,EAAAJ,EAEAC,EAAAC,EAAAT,GAAA,KAAAL,EAAA,cAAA,OACAY,SAAAK,EAAAA,UAAA,EAAA,CAAA,CACA,CAAA,GAKAH,EAAArB,GAAA,KAAAO,EAAA,QAAAH,EAAA,IAAAK,EAAAc,GAAAA,EAAApB,GAAAA,EACAiB,SACAA,CAAA,CAAA,CAEA,CAEAF,EAAAO,UAAA,CAIArB,QAAAsB,EAAAC,KAKAR,SAAAO,EAAAE,OAIAnB,IAAAiB,EAAAE,OAIArB,KAAAmB,EAAAG,MAAAC,OAAAC,KAAApC,CAAA,CAAA,CACA,EAEAuB,EAAAc,aAAA,CACA5B,QAAA,GACAe,SAAA,UACAV,IAAA,KACAF,KAAA,QACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}